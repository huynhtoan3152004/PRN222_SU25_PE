@page
@model LionPetManagement_ToanHH.Pages.LionProfiles.IndexModel

@{
    ViewData["Title"] = "Lion Profiles";
}

<style>
    :root {
        --primary-500: #2563eb;
        --primary-600: #1d4ed8;
        --primary-400: #3b82f6;
        --secondary-500: #64748b;
        --secondary-600: #475569;
        --secondary-400: #94a3b8;
        --success-500: #10b981;
        --success-600: #059669;
        --warning-500: #f59e0b;
        --warning-600: #d97706;
        --danger-500: #ef4444;
        --danger-600: #dc2626;
        --muted: #6c757d;
        --light-bg: #f8fafc;
        --card-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
    }

    .lp-header {
        background: linear-gradient(135deg, var(--primary-600), var(--primary-500));
        color: #fff;
        padding: 1.5rem 1.25rem;
        border-radius: 1rem;
        margin-bottom: 1.5rem;
        box-shadow: var(--card-shadow);
    }

    .lp-card {
        border: 1px solid rgba(37, 99, 235, 0.1);
        border-radius: 1rem;
        box-shadow: var(--card-shadow);
        background: #fff;
    }

    .lp-btn {
        background: var(--primary-500);
        border: 1px solid var(--primary-600);
        color: #fff;
        border-radius: 0.5rem;
        font-weight: 600;
        transition: all 0.3s ease;
    }

    .lp-btn-outline {
        background: transparent;
        color: var(--primary-600);
        border: 1px solid var(--primary-600);
        border-radius: 0.5rem;
        font-weight: 600;
        transition: all 0.3s ease;
    }

    .lp-btn:hover {
        background: var(--primary-600);
        transform: translateY(-1px);
        box-shadow: 0 4px 12px rgba(37, 99, 235, 0.3);
    }

    .lp-btn-outline:hover {
        background: var(--primary-600);
        color: #fff;
        transform: translateY(-1px);
        box-shadow: 0 4px 12px rgba(37, 99, 235, 0.3);
    }

    .search-input:focus {
        border-color: var(--primary-500);
        box-shadow: 0 0 0 0.2rem rgba(37, 99, 235, 0.15);
    }

    .table thead th {
        background: linear-gradient(135deg, var(--primary-600), var(--primary-500));
        color: #fff;
        border: none;
        font-weight: 600;
        padding: 1rem 0.75rem;
    }

    .table tbody tr td {
        vertical-align: middle;
        padding: 0.875rem 0.75rem;
        border-bottom: 1px solid #e2e8f0;
    }

    .table tbody tr:hover {
        background-color: var(--light-bg);
        transform: scale(1.01);
        transition: all 0.2s ease;
    }

    .table tbody tr:last-child td {
        border-bottom: none;
    }

    .small-muted {
        color: var(--muted);
        font-size: .9rem;
    }

    /* Custom Pagination Style */
    .custom-pagination {
        display: flex;
        justify-content: center;
        align-items: center;
        gap: .5rem;
        padding: 1rem 0;
    }

    .custom-pagination .page-link {
        border: 1px solid var(--primary-500);
        color: var(--primary-600);
        padding: 0.5rem 0.75rem;
        border-radius: 0.5rem;
        text-decoration: none;
        transition: all 0.3s ease;
        font-weight: 500;
        margin: 0 0.125rem;
    }

    .custom-pagination .page-link:hover {
        background: var(--primary-500);
        color: #fff;
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(37, 99, 235, 0.3);
    }

    .custom-pagination .page-link.active {
        background: var(--primary-500);
        color: #fff;
        border-color: var(--primary-600);
        box-shadow: 0 2px 8px rgba(37, 99, 235, 0.25);
    }

    .custom-pagination .page-link.disabled {
        opacity: .5;
        cursor: not-allowed;
        pointer-events: none;
    }

    .custom-pagination .page-info {
        color: var(--muted);
        font-size: .9rem;
        padding: 0 1rem;
    }

    .custom-pagination .page-ellipsis {
        color: var(--muted);
        padding: 0 .25rem;
    }

    /* Responsive */
    @@media (max-width: 768px) {
        .lp-header {
            text-align: center;
            flex-direction: column;
            gap: 1rem;
        }

        .search-row {
            flex-direction: column;
            gap: .5rem;
        }

        .custom-pagination {
            flex-wrap: wrap;
        }

        .custom-pagination .page-link {
            padding: .4rem .6rem;
            font-size: .85rem;
        }
    }
</style>

<div class="container-fluid py-4" style="background: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%); min-height: 100vh;">
    <div class="container">
        <div class="lp-header d-flex justify-content-between align-items-center">
            <div>
                <h2 class="mb-1">🦁 Lion Profiles Management</h2>
                <div class="text-white-50">Comprehensive lion profile management system with real-time updates</div>
            </div>
            <div>
                <a asp-page="Create" class="btn lp-btn btn-lg px-4">
                    <i class="fas fa-plus-circle mr-2"></i>✨ Create New Profile
                </a>
            </div>
        </div>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <strong>✅</strong> @TempData["SuccessMessage"]
            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
    }

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <strong>❌</strong> @TempData["ErrorMessage"]
            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
    }

    <div class="lp-card mb-3">
        <div class="card-body">
            <form method="get" class="d-flex align-items-center search-row" role="search">
                <div class="form-group mr-2 flex-fill">
                    <label class="small-muted mb-1">🦁 Lion Name</label>
                    <input name="LionName" type="text" class="form-control search-input" placeholder="Enter lion name" value="@Model.LionName" />
                </div>
                <div class="form-group mr-2 flex-fill">
                    <label class="small-muted mb-1">⚖️ Weight (kg)</label>
                    <input name="Weight" type="number" step="0.01" class="form-control search-input" placeholder="Enter weight" value="@Model.Weight" />
                </div>
                <div class="form-group mr-2 flex-fill">
                    <label class="small-muted mb-1">🏷️ Lion Type</label>
                    <input name="LionTypeName" type="text" class="form-control search-input" placeholder="Enter lion type" value="@Model.LionTypeName" />
                </div>
                <div class="d-flex align-items-end">
                    <button type="submit" class="btn lp-btn mr-2">🔍 Search</button>
                    <a asp-page="./Index" class="btn lp-btn-outline">🔄 Reset</a>
                </div>
            </form>
            </div>
        </div>
    </div>

    <div class="lp-card">
        <div class="card-body p-0">
            <div class="table-responsive">
                <table class="table mb-0">
                    <thead>
                        <tr>
                            <th>Lion Name</th>
                            <th>Weight (kg)</th>
                            <th>Characteristics</th>
                            <th>Warning</th>
                            <th>Modified Date</th>
                            <th>Lion Type</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.LionProfile != null && Model.LionProfile.Any())
                        {
                            @foreach (var item in Model.LionProfile)
                            {
                                <tr data-id="@item.LionProfileId">
                                    <td><strong>@item.LionName</strong></td>
                                    <td>@item.Weight kg</td>
                                    <td>@(item.Characteristics?.Length > 50 ? item.Characteristics.Substring(0, 50) + "..." : item.Characteristics)</td>
                                    <td>@(item.Warning?.Length > 30 ? item.Warning.Substring(0, 30) + "..." : item.Warning)</td>
                                    <td>@(item.ModifiedDate.ToString("dd/MM/yyyy HH:mm"))</td>
                                    <td>
                                        <span class="badge badge-primary px-3 py-2" style="background: linear-gradient(135deg, var(--primary-500), var(--primary-600)); border: none; font-weight: 500;">@item.LionType?.LionTypeName</span>
                                    </td>
                                    <td class="text-nowrap">
                                        <a asp-page="./Update" asp-route-id="@item.LionProfileId" class="btn btn-sm lp-btn" title="Edit" style="min-width: 35px;">✏️</a>
                                        <a asp-page="./Detail" asp-route-id="@item.LionProfileId" class="btn btn-sm lp-btn-outline ml-1" title="Details" style="min-width: 35px;">👁️</a>
                                        <a asp-page="./Delete" asp-route-id="@item.LionProfileId" class="btn btn-sm btn-danger ml-1" title="Delete" style="min-width: 35px; background: var(--danger-500); border-color: var(--danger-600);">🗑️</a>
                                    </td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="7" class="text-center py-4">
                                    <em class="text-muted">😔 No lion profiles found.</em>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
        
        <div class="card-footer">
            <div class="d-flex justify-content-between align-items-center flex-wrap">
                <div class="small-muted mb-2 mb-md-0">
                    📊 Hiển thị @(Model.LionProfile?.Count() ?? 0) / @((Model.PageNumber - 1) * Model.PageSize + (Model.LionProfile?.Count() ?? 0)) hồ sơ
                    <span class="mx-2">|</span>
                    Trang @Model.PageNumber / @Model.TotalPages
                </div>
                
                @if (Model.TotalPages > 1)
                {
                    <nav aria-label="Page navigation">
                        <div class="custom-pagination">
                            <!-- Previous Button -->
                            <a class="page-link @(Model.PageNumber == 1 ? "disabled" : "")" 
                               asp-page="./Index" 
                               asp-route-pageNumber="@(Model.PageNumber - 1)"
                               asp-route-pageSize="@Model.PageSize"
                               asp-route-weight="@Model.Weight"
                               asp-route-lionTypeName="@Model.LionTypeName">
                                ◀ Previous
                            </a>

                            @{
                                int startPage = Math.Max(1, Model.PageNumber - 2);
                                int endPage = Math.Min(Model.TotalPages, Model.PageNumber + 2);
                            }

                            <!-- First Page -->
                            @if (startPage > 1)
                            {
                                <a class="page-link" 
                                   asp-page="./Index" 
                                   asp-route-pageNumber="1"
                                   asp-route-pageSize="@Model.PageSize"
                                   asp-route-weight="@Model.Weight"
                                   asp-route-lionTypeName="@Model.LionTypeName">
                                    1
                                </a>
                                @if (startPage > 2)
                                {
                                    <span class="page-ellipsis">...</span>
                                }
                            }

                            <!-- Page Numbers -->
                            @for (int i = startPage; i <= endPage; i++)
                            {
                                <a class="page-link @(Model.PageNumber == i ? "active" : "")" 
                                   asp-page="./Index" 
                                   asp-route-pageNumber="@i"
                                   asp-route-pageSize="@Model.PageSize"
                                   asp-route-weight="@Model.Weight"
                                   asp-route-lionTypeName="@Model.LionTypeName">
                                    @i
                                </a>
                            }

                            <!-- Last Page -->
                            @if (endPage < Model.TotalPages)
                            {
                                @if (endPage < Model.TotalPages - 1)
                                {
                                    <span class="page-ellipsis">...</span>
                                }
                                <a class="page-link" 
                                   asp-page="./Index" 
                                   asp-route-pageNumber="@Model.TotalPages"
                                   asp-route-pageSize="@Model.PageSize"
                                   asp-route-weight="@Model.Weight"
                                   asp-route-lionTypeName="@Model.LionTypeName">
                                    @Model.TotalPages
                                </a>
                            }

                            <!-- Next Button -->
                            <a class="page-link @(Model.PageNumber >= Model.TotalPages ? "disabled" : "")" 
                               asp-page="./Index" 
                               asp-route-pageNumber="@(Model.PageNumber + 1)"
                               asp-route-pageSize="@Model.PageSize"
                               asp-route-weight="@Model.Weight"
                               asp-route-lionTypeName="@Model.LionTypeName">
                                Next ▶
                            </a>

                            <!-- Page Size Selector -->
                            <div class="ml-3">
                                <select class="form-control form-control-sm" 
                                        onchange="window.location.href=this.value" 
                                        style="min-width: 100px;">
                                    <option value="@Url.Page("./Index", new { pageNumber = 1, pageSize = 5, weight = Model.Weight, lionTypeName = Model.LionTypeName })" 
                                            selected="@(Model.PageSize == 5)">5 / page</option>
                                    <option value="@Url.Page("./Index", new { pageNumber = 1, pageSize = 10, weight = Model.Weight, lionTypeName = Model.LionTypeName })" 
                                            selected="@(Model.PageSize == 10)">10 / page</option>
                                    <option value="@Url.Page("./Index", new { pageNumber = 1, pageSize = 20, weight = Model.Weight, lionTypeName = Model.LionTypeName })" 
                                            selected="@(Model.PageSize == 20)">20 / page</option>
                                    <option value="@Url.Page("./Index", new { pageNumber = 1, pageSize = 50, weight = Model.Weight, lionTypeName = Model.LionTypeName })" 
                                            selected="@(Model.PageSize == 50)">50 / page</option>
                                </select>
                            </div>
                        </div>
                    </nav>
                }
            </div>
        </div>
    </div>
</div>

<script src="~/lib/signalr/signalr.js"></script>
<script>
    // Auto close alerts after 5 seconds
    setTimeout(function() {
        $('.alert').fadeOut('slow');
    }, 5000);

    // SignalR connection for real-time updates
    const connection = new signalR.HubConnectionBuilder()
        .withUrl("/LionProfileHubs")
        .build();

    connection.on("ReceiveDelete", function (deletedId) {
        // Remove the deleted row from the table
        const row = document.querySelector(`tr[data-id="${deletedId}"]`);
        if (row) {
            row.remove();
            // Show notification
            showNotification(`Lion profile with ID ${deletedId} has been deleted by another user.`, 'warning');
        }
    });

    connection.start().catch(function (err) {
        return console.error(err.toString());
    });

    function showNotification(message, type = 'info') {
        const alertClass = type === 'warning' ? 'alert-warning' : 'alert-info';
        const alertHtml = `
            <div class="alert ${alertClass} alert-dismissible fade show" role="alert">
                <strong>${type === 'warning' ? '⚠️' : 'ℹ️'}</strong> ${message}
                <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
        `;
        $('.container').prepend(alertHtml);
        // Auto close after 5 seconds
        setTimeout(function() {
            $('.alert').fadeOut('slow');
        }, 5000);
    }
</script>

